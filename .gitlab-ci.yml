image: gitlab01.niryotech.com:5050/robot/common/development-tools/development-tools:latest

variables:
  ROS_LANG_DISABLE: genlisp:geneus:gennodejs

  ########### Part that needs to be overwrite for each documentation ###########

  # Documentation name
  DOCUMENTATION_NAME: ros

  DOCUMENTATION_OUTPUT_FOLDER: "output_build"

  BASE_GITLAB_CI_RESSOURCE_URL: "https://gitlab01.niryotech.com/pipelines/gitlab-ci-jobs/-/raw/master/"

  GITLAB_CATKIN_PROFILE_NAME: gitlab_ci

  ##############################################################################

  # Allow to pull the directory containing front-end files
#  GIT_SUBMODULE_STRATEGY: recursive
#  GIT_STRATEGY: fetch
#  GIT_DEPTH: 0
  NIRYO_HOME_FOLDER: /home/niryo/catkin_ws
#  GET_SOURCES_ATTEMPTS: 3

stages:
  - build_docker
  - build
  - documentation
  - build_tests
  - test
  - upload
  - environment_test
  - release_gitlab

include:
  ## See https://docs.gitlab.com/ee/user/project/merge_requests/code_quality.html
  - template: Code-Quality.gitlab-ci.yml
  # Build documentation
  - project: 'pipelines/gitlab-ci-jobs'
    ref: master
    file: 'documentation/build_documentation/build_documentation_config.yml'
  # Check for missing translations or fuzzy
  - project: 'pipelines/gitlab-ci-jobs'
    ref: master
    file: 'documentation/missing_translations/missing_translations_config.yml'
  # Upload documentation to niryo.com ftp
  - project: 'pipelines/gitlab-ci-jobs'
    ref: master
    file: 'documentation/upload_to_ftp/upload_to_ftp_config.yml'
  # Check for broken links in website
  - project: 'pipelines/gitlab-ci-jobs'
    ref: master
    file: 'documentation/link_checker/link_checker_config.yml'
  # Create Gitlab release (tag + release)
  - project: 'pipelines/gitlab-ci-jobs'
    ref: master
    file: 'various/release_gitlab/release_gitlab_config.yml'

.abstract_catkin_build:
  stage: build
  before_script:
    - git config --global --add safe.directory $DEVELOPMENT_TOOLS_PATH
    - cd $DEVELOPMENT_TOOLS_PATH
    - git pull $DEVELOPMENT_TOOLS_REPO
  script:
    - mv ${CI_PROJECT_DIR} ${NIRYO_HOME_FOLDER}/src
    - source /opt/ros/${ROS_DISTRO}/setup.bash
    - $DEVELOPMENT_TOOLS_PATH/setEnv${ROS_DISTRO^}.sh -p ${NIRYO_HOME_FOLDER}
    - cd ${NIRYO_HOME_FOLDER}
    - catkin build --profile ${GITLAB_CATKIN_PROFILE_NAME}
    - mv ${NIRYO_HOME_FOLDER} ${CI_PROJECT_DIR}
  variables:
    ROS_DISTRO: noetic
    DEVELOPMENT_TOOLS_PATH: /development-tools
    DEVELOPMENT_TOOLS_REPO: https://access_token:${DEVELOPMENT_TOOLS_ACCESS_TOKEN}@gitlab01.niryotech.com/robot/common/development-tools
  artifacts:
    expire_in: 1 week
    paths:
      - devel
      - build
      - install

catkin_make_amd:
  extends: .abstract_catkin_build

catkin_make_arm:
  extends: .abstract_catkin_build
  variables:
    GITLAB_CATKIN_PROFILE_NAME: release_cross_compilation

build_doc_job:
  image: gitlab01.niryotech.com:5050/documentations/build_docs/ned_ros_stack:latest_amd64
  dependencies:
    - catkin_make_amd
  stage: documentation
  script:
    # Do stuff to move source properly for catkin_make
    - !reference [ .abstract_move_source_tricks_job, script ]
    - cd src/sphinx_doc
    - git submodule update --init
    # Build documentation without todo printing in final document
    - scripts/build_docs.sh -D todo_include_todos=0 -o ${DOCUMENTATION_OUTPUT_FOLDER}
    - scripts/generate_pdf.sh -o ${DOCUMENTATION_OUTPUT_FOLDER}/generated_pdfs
    - mv ${NIRYO_HOME_FOLDER}/* ${previous_path}
  after_script:
    - mv src/sphinx_doc/${DOCUMENTATION_OUTPUT_FOLDER} ${DOCUMENTATION_OUTPUT_FOLDER}

.abstract_move_source_tricks_job:
  stage: test
  dependencies:
    - catkin_make_amd
  script:
    # Quick fix for changing "ROS folder "
    - previous_path=`pwd`
    - mkdir -p ${NIRYO_HOME_FOLDER}
    - cd ${NIRYO_HOME_FOLDER}
    - mkdir src
    - shopt -s dotglob
    - mv ${CI_PROJECT_DIR}/* src
    - mv src/install .
    - mv src/build .
    - mv src/devel .
    - ls -al .
    ################# Quickfix end ###############
    - source install/${GITLAB_CATKIN_PROFILE_NAME}/setup.bash
  # Important to restore to proper artifacts folder (pwd gets resetted between script/after_script)
  after_script:
    - mv ${NIRYO_HOME_FOLDER}/* .

catkin_compile_tests:
  stage: build_tests
  dependencies:
    - catkin_make_amd
  script:
    # Do stuff to move source properly for catkin_make
    - !reference [ .abstract_move_source_tricks_job, script ]
    - /development-tools/setEnv${ROS_DISTRO^}.sh -p ${NIRYO_HOME_FOLDER}
    - catkin build --profile ${GITLAB_CATKIN_PROFILE_NAME} --make-args tests
  # Important to restore to proper artifacts folder (pwd gets resetted between script/after_script)
  after_script:
    - mv ${NIRYO_HOME_FOLDER}/* .
  artifacts:
    expire_in: 1 week
    paths:
      - devel
      - build
      - install
  retry:
    max: 1

test_job:
  stage: test
  dependencies:
    - catkin_compile_tests
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - build/${GITLAB_CATKIN_PROFILE_NAME}/*/test_results/*/rostest-*.xml
      - build/${GITLAB_CATKIN_PROFILE_NAME}/*/test_results/*/gtest-*.xml
      - build/${GITLAB_CATKIN_PROFILE_NAME}/*/test_results/*/rosunit-*.xml
    reports:
      junit:
        - build/${GITLAB_CATKIN_PROFILE_NAME}/*/test_results/*/rostest-*.xml
        - build/${GITLAB_CATKIN_PROFILE_NAME}/*/test_results/*/gtest-*.xml
        - build/${GITLAB_CATKIN_PROFILE_NAME}/*/test_results/*/rosunit-*.xml
  script:
    # Do stuff to move source properly for catkin_make
    - !reference [ .abstract_move_source_tricks_job, script ]
    - /development-tools/setEnv${ROS_DISTRO^}.sh -p ${NIRYO_HOME_FOLDER}
    - catkin build --profile ${GITLAB_CATKIN_PROFILE_NAME} -j1
    # Launch all tests (python / C++)
    # Note: Without -j1, multiple jobs was running and problems occured for xml results output files
    # (sometimes a part of file was duplicated and unreadable by scripts then)
    - catkin run_tests --profile ${GITLAB_CATKIN_PROFILE_NAME} -j1
  after_script:
    - mv ${NIRYO_HOME_FOLDER}/* .
  allow_failure: true
  when: manual

roslint_job:
  stage: test
  dependencies:
    - catkin_make_amd
  script:
    # Do stuff to move source properly for catkin_make
    - !reference [ .abstract_move_source_tricks_job, script ]
    - /development-tools/setEnv${ROS_DISTRO^}.sh -p ${NIRYO_HOME_FOLDER}
    # Check code linting
    - catkin build --profile ${GITLAB_CATKIN_PROFILE_NAME} --make-args roslint -j1

catkin_lint_job:
  stage: test
  dependencies:
    - catkin_make_amd
  script:
    # Do stuff to move source properly for catkin_make
    - !reference [ .abstract_move_source_tricks_job, script ]
    # Check code linting
    - catkin_lint -W2 --rosdistro noetic --ignore missing_directory --ignore unknown_package --explain src --skip-pkg foxglove_bridge


code_quality:
  tags:
    - dind
  artifacts:
    expire_in: 1 week
    paths: [ gl-code-quality-report.json ]
  # Authenticate with account to not be limited by docker hub pull rate limit
  before_script:
    - docker login -u ${DOCKER_HUB_DOCKER_ID} -p ${DOCKER_HUB_PASSWORD}

code_quality_html:
  extends: code_quality
  variables:
    REPORT_FORMAT: html
  artifacts:
    expire_in: 1 week
    paths: [ gl-code-quality-report.html ]

missing_translation_job:
  image: gitlab01.niryotech.com:5050/documentations/build_docs/base:latest_amd64
  stage: test
  variables:
    LOCALE_FOLDER_PATH: ./sphinx_doc/locale
  rules:
    - if: $CI_COMMIT_BRANCH
    - if: $CI_COMMIT_TAG

.staging_job:
  variables: &staging_variables
    DOMAIN_NAME: https://staging.docs.niryo.com
    BASE_FOLDER_DOC_URL: https://staging.docs.niryo.com/dev
    TARGET_FOLDER_OVH: ~/docs_staging/dev

upload_staging_job:
  image: gitlab01.niryotech.com:5050/documentations/build_docs/base:latest_amd64
  stage: upload
  environment:
    name: staging
    deployment_tier: staging
    action: start
  tags:
    - staging
  variables:
    CI_COMMIT_TAG: v0.0.1
    <<: *staging_variables
  rules:
    - if: $CI_COMMIT_BRANCH
      when: manual
      allow_failure: true
  extends: .abstract_upload

linkchecker_staging_job:
  extends: .abstract_linkchecker
  stage: environment_test
  variables:
    <<: *staging_variables
  rules:
    - if: $CI_COMMIT_BRANCH
  needs:
    - upload_staging_job

.production_job:
  variables: &production_variables
    DOMAIN_NAME: https://docs.niryo.com
    BASE_FOLDER_DOC_URL: https://docs.niryo.com/dev
    TARGET_FOLDER_OVH: ~/docs/dev
  rules: &production_rules
    ## Just in case we would restrict to master (https://stackoverflow.com/a/64448994)
    # If a it's a tag && protected tag
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED == "true"

upload_production_job:
  image: gitlab01.niryotech.com:5050/documentations/build_docs/base:latest_amd64
  rules: *production_rules
  stage: upload
  environment:
    name: production
    deployment_tier: production
    action: start
  tags:
    - production
  variables:
    <<: *production_variables
  extends: .abstract_upload

linkchecker_production_job:
  rules: *production_rules
  stage: environment_test
  variables:
    <<: *production_variables
  needs:
    - upload_production_job
  extends: .abstract_linkchecker

release_gitlab_job:
  rules: *production_rules
  stage: release_gitlab