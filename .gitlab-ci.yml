image: ${CI_REGISTRY}/robot/common/development-tools/development-tools:latest

variables:
  GITLAB_CATKIN_PROFILE_NAME: release
  CATKIN_WS: /root/catkin_ws
  ROS_DISTRO: noetic


stages:
  - build
  - documentation
  - build_tests
  - test
  - release


include:
  ## See https://docs.gitlab.com/ee/user/project/merge_requests/code_quality.html
  - template: Code-Quality.gitlab-ci.yml


.abstract_catkin_build:
  stage: build
  script:
    - mv ${CI_PROJECT_DIR} ${CATKIN_WS}/src
    - source /opt/ros/${ROS_DISTRO}/setup.bash
    - cd ${CATKIN_WS}
    - /development-tools/setEnv${ROS_DISTRO^}.sh -p ${CATKIN_WS}
    - catkin build --profile ${GITLAB_CATKIN_PROFILE_NAME} ${BUILD_ARGS}
    - mv ${CATKIN_WS} ${CI_PROJECT_DIR}
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    BUILD_ARGS: ""
  artifacts:
    expire_in: 1 week
    paths:
      - build
      - devel
      - install
      - src

build_amd:
  extends: .abstract_catkin_build
  variables:
    GITLAB_CATKIN_PROFILE_NAME: release
    BUILD_ARGS: --cmake-args -DCATKIN_ENABLE_TESTING=ON -DENABLE_COVERAGE_TESTING=ON -DCMAKE_BUILD_TYPE=Debug

build_arm:
  extends: .abstract_catkin_build
  variables:
    GITLAB_CATKIN_PROFILE_NAME: release_cross_compilation

generate_tar_artifacts:
  stage: build
  needs:
    - build_arm
  script:
    - tar --exclude 'src/.git*' -czf artifacts.tar.gz build devel install src
  artifacts:
    paths:
      - artifacts.tar.gz
    expire_in: 1 week

build_ned2_docs:
  stage: documentation
  dependencies:
    - build_amd
  before_script:
    - source /root/setup.bash
    - source /root/catkin_ws_venv/bin/activate
    - mv install $CATKIN_WS/
    - source ${CATKIN_WS}_venv/bin/activate
    - pip install --upgrade -r docs/requirements.txt
  script:
    - source /root/setup.bash
    - source /root/catkin_ws_venv/bin/activate
    - /entrypoint.sh &
    - cd docs
    - make clean
    - python3 wait_for_stack_ready.py
    - sphinx-build . .build/html
  variables:
    HARDWARE_VERSION: ned2
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/docs/.build
    expire_in: 1 hour
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_COMMIT_TAG

pages:
  stage: documentation
  needs:
    - build_ned2_docs
  script:
    - rm -rf public
    - mv ${CI_PROJECT_DIR}/docs/.build/html public
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == "master"

test_job:
  stage: test
  dependencies:
    - build_amd
  before_script:
    - mkdir -p ${CATKIN_WS}
    - mv -t ${CATKIN_WS} src install build devel
    - /development-tools/setEnv${ROS_DISTRO^}.sh -p ${CATKIN_WS}
  script:
    - cd ${CATKIN_WS}
    - source install/${GITLAB_CATKIN_PROFILE_NAME}/setup.bash
    - catkin build --profile ${GITLAB_CATKIN_PROFILE_NAME} -j1 --make-args tests
    # Launch all tests (python / C++)
    # Note: Without -j1, multiple jobs was running and problems occured for xml results output files
    # (sometimes a part of file was duplicated and unreadable by scripts then)
    - catkin run_tests --profile ${GITLAB_CATKIN_PROFILE_NAME} -j1
  after_script:
    - mv ${CATKIN_WS}/build $CI_PROJECT_DIR/
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - build/${GITLAB_CATKIN_PROFILE_NAME}/*/test_results/*/rostest-*.xml
      - build/${GITLAB_CATKIN_PROFILE_NAME}/*/test_results/*/gtest-*.xml
      - build/${GITLAB_CATKIN_PROFILE_NAME}/*/test_results/*/rosunit-*.xml
    reports:
      junit:
        - build/${GITLAB_CATKIN_PROFILE_NAME}/*/test_results/*/rostest-*.xml
        - build/${GITLAB_CATKIN_PROFILE_NAME}/*/test_results/*/gtest-*.xml
        - build/${GITLAB_CATKIN_PROFILE_NAME}/*/test_results/*/rosunit-*.xml
  allow_failure: true
  when: manual

lint:
  stage: test
  dependencies:
    - build_amd
  before_script:
    - mkdir -p ${CATKIN_WS}
    - mv -t ${CATKIN_WS} src install build devel
    - /development-tools/setEnv${ROS_DISTRO^}.sh -p ${CATKIN_WS}
  script:
    # Check code linting
    - cd ${CATKIN_WS}
    - source install/${GITLAB_CATKIN_PROFILE_NAME}/setup.bash
    - catkin build --profile ${GITLAB_CATKIN_PROFILE_NAME} --make-args roslint -- -j1 niryo_robot_*
    - catkin_lint -W2 --rosdistro noetic --ignore missing_directory --ignore unknown_package --explain src --skip-pkg foxglove_bridge

mirror_github:
  stage: release
  dependencies:
    - build_ned2_docs
  before_script:
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - echo "$GIT_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
  script:
    # Mirror master and tags to GitHub
    - git clone --mirror "$CI_REPOSITORY_URL" bare_mirror
    - cd bare_mirror
    - git push --force $GH_REPOSITORY_URL master
    - git push --force --tags $GH_REPOSITORY_URL

    # Push docs to GitHub pages on branch pages
    - git config --global user.email "$GITLAB_USER_EMAIL"
    - git config --global user.name "$GITLAB_USER_LOGIN"
    - git init ../mirror
    - cd ../mirror
    - git remote add origin $GH_REPOSITORY_URL
    - git checkout --orphan pages
    - rsync -az ${CI_PROJECT_DIR}/docs/.build/html/ ./
    - touch .nojekyll
    - git add .
    - git commit --quiet -m "Publish docs for $CI_COMMIT_TAG"
    - git push --force --set-upstream origin pages
  variables:
    GIT_STRATEGY: none
    GH_REPOSITORY_URL: git@github.com:NiryoRobotics/ned_ros.git
  rules:
    - if: $CI_COMMIT_TAG

trigger_job:
  image: curlimages/curl
  stage: .post
  script:
    - curl --fail --show-error 
      --form "token=$CI_JOB_TOKEN"
      --form "ref=master"
      --form variables[INCOMING_BRANCH]="$CI_COMMIT_BRANCH"
      --form variables[TRIGGER_COMMIT_MESSAGE]="$CI_COMMIT_MESSAGE"
      "${CI_API_V4_URL}/projects/${TARGET_REPO_ID}/trigger/pipeline"
  variables:
    TARGET_REPO_ID: 36
  only:
    refs:
      - develop
      - master
